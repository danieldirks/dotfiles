# open elevated shell if not already running as admin
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
    if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
        # add -NoExit to keep elevated shell open after exit
        $CommandLine = "-File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
        Start-Process -Wait -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine
        Exit
    }
}


################
### packages ###
################

Write-Host -ForegroundColor Yellow "`ninstall packages"

{{ if .packages.windows.headless.winget -}}
{{-   range .packages.windows.headless.winget | sortAlpha | uniq }}
Write-Host -ForegroundColor Blue "`n{{ . }}"
winget install --accept-package-agreements --accept-source-agreements -e --id {{ . }}
{{-   end }}
{{- end }}

{{ if (and (not .headless) .packages.windows.gui.winget) -}}
{{-   range .packages.windows.gui.winget | sortAlpha | uniq }}
Write-Host -ForegroundColor Blue "`n{{ . }}"
winget install --accept-package-agreements --accept-source-agreements -e --id {{ . }}
{{-   end }}
{{- end }}


###########
### wsl ###
###########

if (!(Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux).State) {
    Write-Host -ForegroundColor Yellow "`nsetup wsl"
    Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
}
