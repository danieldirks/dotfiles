{{- if eq .osid "linux-ubuntu" -}}

{{- $repos := list
    ( dict
        "name" "helm"
        "key" "https://baltocdn.com/helm/signing.asc"
        "url" "https://baltocdn.com/helm/stable/debian/"
        "dist" "all"
        "comp" "main"
    )
    ( dict
        "name" "kubernetes"
        "key" "https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key"
        "url" "https://pkgs.k8s.io/core:/stable:/v1.30/deb/"
        "dist" "/"
        "comp" ""
    ) -}}
{{- $packages := list
    "ack"
    "bat"
    "btop"
    "cargo"
    "cmake"
    "curl"
    "fd-find"
    "fzf"
    "gcc"
    "git"
    "gnupg"
    "helm"
    "imagemagick"
    "kubectl"
    "libffi-dev"
    "libimage-exiftool-perl"
    "libsqlite3-dev"
    "libssl-dev"
    "libyaml-dev"
    "make"
    "neofetch"
    "neomutt"
    "npm"
    "pandoc"
    "python3"
    "python3-keyring"
    "python3-pip"
    "python3-pynvim"
    "python3-venv"
    "ripgrep"
    "sc-im"
    "scdaemon"
    "silversearcher-ag"
    "taskwarrior"
    "tldr"
    "tmux"
    "tmuxinator"
    "zlib1g-dev"
    "zoxide"
    "zsh" -}}
{{- $snaps := list
    "k9s"
    "nvim --classic" -}}

{{- if not .headless -}}
{{-   $packages = concat $packages (list "firefox" "keepassxc" "xclip") -}}
{{-   $snaps = mustAppend $snaps "code --classic" -}}
{{- end -}}

{{- if .wsl -}}
{{- /* use wslview instead of open to open files with windows defaults */ -}}
{{-   $packages = mustAppend $packages "wslu" -}}
{{- end -}}

#!/bin/bash
set -e

sudo apt-get install -y ca-certificates curl gnupg apt-transport-https
{{- range $repos }}
curl -fsSL {{ .key | quote }} | sudo gpg --yes --dearmor -o /etc/apt/keyrings/{{ .name }}.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/{{ .name }}.gpg] {{ .url }} {{ .dist }} {{ .comp }}" | sudo tee /etc/apt/sources.list.d/{{ .name }}.list
{{- end }}

sudo apt-get update
sudo apt-get install -y {{ join " " ( $packages | sortAlpha | uniq ) }}

{{- range $snaps | sortAlpha | uniq }}
sudo snap install {{ . }}
{{- end }}

# fix paths
ln -fs $(which fdfind) ~/.local/bin/fd
ln -fs $(which batcat) ~/.local/bin/bat

{{- end }}
