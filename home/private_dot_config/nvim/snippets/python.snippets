snippet #!
	#!/usr/bin/env python3
snippet #!2
	#!/usr/bin/env python2
	# -*- coding: utf-8 -*-
snippet #!3
	#!/usr/bin/env python3
snippet import
	import ${0:module}
snippet from
	from ${1:package} import ${0:module}

snippet if
	if $1:
		${0:${VISUAL}}
snippet elif
	elif $1:
		${0:${VISUAL}}
snippet else
	else:
		${0:${VISUAL}}

snippet for
	for ${1:item} in ${2:items}:
		${0}

snippet try try/except
	try:
		${1:${VISUAL}}
	except ${2:Exception} as ${3:e}:
		${0:raise $3}
snippet trye try/except/else
	try:
		${1:${VISUAL}}
	except ${2:Exception} as ${3:e}:
		${4:raise $3}
	else:
		${0}
snippet tryf try/except/finally
	try:
		${1:${VISUAL}}
	except ${2:Exception} as ${3:e}:
		${4:raise $3}
	finally:
		${0}
snippet tryef try/except/else/finally
	try:
		${1:${VISUAL}}
	except ${2:Exception} as ${3:e}:
		${4:raise $3}
	else:
		${5}
	finally:
		${0}

snippet ifmain
	if __name__ == "__main__":
		${0:main()}

# logging
snippet log
	import logging
	LOGGER = logging.getLogger(${0:__name__})
snippet loge
	LOGGER.error(${0:msg})
snippet logd
	LOGGER.debug(${0:msg})
snippet logw
	LOGGER.warning(${0:msg})
snippet logc
	LOGGER.critical(${0:msg})
snippet logi
	LOGGER.info(${0:msg})

# comprehensions
snippet lc list comprehension
	[${1} for ${2} in ${3:${VISUAL}}]${0}

snippet dc dict comprehension
	{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}

snippet sc set comprehension
	{${1} for ${2} in ${3:${VISUAL}}}${0}
